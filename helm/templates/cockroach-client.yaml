{{- if .Values.cockroachClient.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: cockroach-config
data:
{{ (.Files.Glob "raw-files/database/schema.sh").AsConfig | indent 2 }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: cockroachdb-secure-client
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cockroachdb-secure-client
  template:
    metadata:
      labels:
        app: cockroachdb-secure-client
    spec:
      serviceAccountName: cockroach-db
      containers:
      - name: cockroachdb-client-secure
        image: {{ .Values.cockroachClient.image }}
        imagePullPolicy: IfNotPresent
        env:
          - name: DB_NAME
            value: {{ .Values.dbconf.dbName }}
          - name: DB_USER
            value: {{ .Values.dbconf.dbUser }}
          - name: DB_PASSWORD
            value: {{ .Values.dbconf.dbUserPassword }}
          - name: DB_SCHEMA
            value: {{ .Values.dbconf.dbSchema }}
        volumeMounts:
        - name: client-certs
          mountPath: /cockroach/cockroach-certs/
        - name: cockroach-config
          mountPath: /cockroach/scripts/
        command:
        - /bin/bash
        - ./scripts/schema.sh
      terminationGracePeriodSeconds: 300
      volumes:
      - name: client-certs
        projected:
            defaultMode: 0400
            sources:
              - secret:
                  name: cockroach-db-client-secret # Use the existing secret name
                  items:
                    - key: ca.crt
                      path: ca.crt
                    - key: tls.crt
                      path: client.root.crt
                    - key: tls.key
                      path: client.root.key
      - name: cockroach-config
        configMap:
          name: cockroach-config
{{- end }}